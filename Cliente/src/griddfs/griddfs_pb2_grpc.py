# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import griddfs_pb2 as griddfs__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in griddfs_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class NameNodeServiceStub(object):
    """==============================
    Servicios del NameNode
    ==============================
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LoginUser = channel.unary_unary(
                '/griddfs.NameNodeService/LoginUser',
                request_serializer=griddfs__pb2.LoginRequest.SerializeToString,
                response_deserializer=griddfs__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.RegisterUser = channel.unary_unary(
                '/griddfs.NameNodeService/RegisterUser',
                request_serializer=griddfs__pb2.RegisterUserRequest.SerializeToString,
                response_deserializer=griddfs__pb2.RegisterUserResponse.FromString,
                _registered_method=True)
        self.CreateFile = channel.unary_unary(
                '/griddfs.NameNodeService/CreateFile',
                request_serializer=griddfs__pb2.CreateFileRequest.SerializeToString,
                response_deserializer=griddfs__pb2.CreateFileResponse.FromString,
                _registered_method=True)
        self.GetFileInfo = channel.unary_unary(
                '/griddfs.NameNodeService/GetFileInfo',
                request_serializer=griddfs__pb2.GetFileInfoRequest.SerializeToString,
                response_deserializer=griddfs__pb2.GetFileInfoResponse.FromString,
                _registered_method=True)
        self.ListFiles = channel.unary_unary(
                '/griddfs.NameNodeService/ListFiles',
                request_serializer=griddfs__pb2.ListFilesRequest.SerializeToString,
                response_deserializer=griddfs__pb2.ListFilesResponse.FromString,
                _registered_method=True)
        self.DeleteFile = channel.unary_unary(
                '/griddfs.NameNodeService/DeleteFile',
                request_serializer=griddfs__pb2.DeleteFileRequest.SerializeToString,
                response_deserializer=griddfs__pb2.DeleteFileResponse.FromString,
                _registered_method=True)
        self.CreateDirectory = channel.unary_unary(
                '/griddfs.NameNodeService/CreateDirectory',
                request_serializer=griddfs__pb2.CreateDirectoryRequest.SerializeToString,
                response_deserializer=griddfs__pb2.CreateDirectoryResponse.FromString,
                _registered_method=True)
        self.RemoveDirectory = channel.unary_unary(
                '/griddfs.NameNodeService/RemoveDirectory',
                request_serializer=griddfs__pb2.RemoveDirectoryRequest.SerializeToString,
                response_deserializer=griddfs__pb2.RemoveDirectoryResponse.FromString,
                _registered_method=True)
        self.RegisterDataNode = channel.unary_unary(
                '/griddfs.NameNodeService/RegisterDataNode',
                request_serializer=griddfs__pb2.RegisterDataNodeRequest.SerializeToString,
                response_deserializer=griddfs__pb2.RegisterDataNodeResponse.FromString,
                _registered_method=True)
        self.Heartbeat = channel.unary_unary(
                '/griddfs.NameNodeService/Heartbeat',
                request_serializer=griddfs__pb2.HeartbeatRequest.SerializeToString,
                response_deserializer=griddfs__pb2.HeartbeatResponse.FromString,
                _registered_method=True)
        self.BlockReport = channel.unary_unary(
                '/griddfs.NameNodeService/BlockReport',
                request_serializer=griddfs__pb2.BlockReportRequest.SerializeToString,
                response_deserializer=griddfs__pb2.BlockReportResponse.FromString,
                _registered_method=True)


class NameNodeServiceServicer(object):
    """==============================
    Servicios del NameNode
    ==============================
    """

    def LoginUser(self, request, context):
        """Autenticación de usuario
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterUser(self, request, context):
        """Registrar nuevo usuario
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFile(self, request, context):
        """Crear un archivo (PUT - fase de planificación)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileInfo(self, request, context):
        """Obtener información de un archivo (GET - ubicaciones de bloques)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFiles(self, request, context):
        """Listar archivos en un directorio
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFile(self, request, context):
        """Eliminar un archivo
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDirectory(self, request, context):
        """Crear un directorio
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveDirectory(self, request, context):
        """Eliminar un directorio
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterDataNode(self, request, context):
        """Registro de DataNode
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Heartbeat(self, request, context):
        """Heartbeat de un DataNode
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BlockReport(self, request, context):
        """Reporte de bloques de un DataNode
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NameNodeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LoginUser': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginUser,
                    request_deserializer=griddfs__pb2.LoginRequest.FromString,
                    response_serializer=griddfs__pb2.LoginResponse.SerializeToString,
            ),
            'RegisterUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterUser,
                    request_deserializer=griddfs__pb2.RegisterUserRequest.FromString,
                    response_serializer=griddfs__pb2.RegisterUserResponse.SerializeToString,
            ),
            'CreateFile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFile,
                    request_deserializer=griddfs__pb2.CreateFileRequest.FromString,
                    response_serializer=griddfs__pb2.CreateFileResponse.SerializeToString,
            ),
            'GetFileInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFileInfo,
                    request_deserializer=griddfs__pb2.GetFileInfoRequest.FromString,
                    response_serializer=griddfs__pb2.GetFileInfoResponse.SerializeToString,
            ),
            'ListFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFiles,
                    request_deserializer=griddfs__pb2.ListFilesRequest.FromString,
                    response_serializer=griddfs__pb2.ListFilesResponse.SerializeToString,
            ),
            'DeleteFile': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFile,
                    request_deserializer=griddfs__pb2.DeleteFileRequest.FromString,
                    response_serializer=griddfs__pb2.DeleteFileResponse.SerializeToString,
            ),
            'CreateDirectory': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDirectory,
                    request_deserializer=griddfs__pb2.CreateDirectoryRequest.FromString,
                    response_serializer=griddfs__pb2.CreateDirectoryResponse.SerializeToString,
            ),
            'RemoveDirectory': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveDirectory,
                    request_deserializer=griddfs__pb2.RemoveDirectoryRequest.FromString,
                    response_serializer=griddfs__pb2.RemoveDirectoryResponse.SerializeToString,
            ),
            'RegisterDataNode': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterDataNode,
                    request_deserializer=griddfs__pb2.RegisterDataNodeRequest.FromString,
                    response_serializer=griddfs__pb2.RegisterDataNodeResponse.SerializeToString,
            ),
            'Heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heartbeat,
                    request_deserializer=griddfs__pb2.HeartbeatRequest.FromString,
                    response_serializer=griddfs__pb2.HeartbeatResponse.SerializeToString,
            ),
            'BlockReport': grpc.unary_unary_rpc_method_handler(
                    servicer.BlockReport,
                    request_deserializer=griddfs__pb2.BlockReportRequest.FromString,
                    response_serializer=griddfs__pb2.BlockReportResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'griddfs.NameNodeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('griddfs.NameNodeService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NameNodeService(object):
    """==============================
    Servicios del NameNode
    ==============================
    """

    @staticmethod
    def LoginUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/griddfs.NameNodeService/LoginUser',
            griddfs__pb2.LoginRequest.SerializeToString,
            griddfs__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegisterUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/griddfs.NameNodeService/RegisterUser',
            griddfs__pb2.RegisterUserRequest.SerializeToString,
            griddfs__pb2.RegisterUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/griddfs.NameNodeService/CreateFile',
            griddfs__pb2.CreateFileRequest.SerializeToString,
            griddfs__pb2.CreateFileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFileInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/griddfs.NameNodeService/GetFileInfo',
            griddfs__pb2.GetFileInfoRequest.SerializeToString,
            griddfs__pb2.GetFileInfoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/griddfs.NameNodeService/ListFiles',
            griddfs__pb2.ListFilesRequest.SerializeToString,
            griddfs__pb2.ListFilesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/griddfs.NameNodeService/DeleteFile',
            griddfs__pb2.DeleteFileRequest.SerializeToString,
            griddfs__pb2.DeleteFileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateDirectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/griddfs.NameNodeService/CreateDirectory',
            griddfs__pb2.CreateDirectoryRequest.SerializeToString,
            griddfs__pb2.CreateDirectoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveDirectory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/griddfs.NameNodeService/RemoveDirectory',
            griddfs__pb2.RemoveDirectoryRequest.SerializeToString,
            griddfs__pb2.RemoveDirectoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RegisterDataNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/griddfs.NameNodeService/RegisterDataNode',
            griddfs__pb2.RegisterDataNodeRequest.SerializeToString,
            griddfs__pb2.RegisterDataNodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/griddfs.NameNodeService/Heartbeat',
            griddfs__pb2.HeartbeatRequest.SerializeToString,
            griddfs__pb2.HeartbeatResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BlockReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/griddfs.NameNodeService/BlockReport',
            griddfs__pb2.BlockReportRequest.SerializeToString,
            griddfs__pb2.BlockReportResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class DataNodeServiceStub(object):
    """==============================
    Servicios del DataNode
    ==============================
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.WriteBlock = channel.stream_unary(
                '/griddfs.DataNodeService/WriteBlock',
                request_serializer=griddfs__pb2.WriteBlockRequest.SerializeToString,
                response_deserializer=griddfs__pb2.WriteBlockResponse.FromString,
                _registered_method=True)
        self.ReadBlock = channel.unary_stream(
                '/griddfs.DataNodeService/ReadBlock',
                request_serializer=griddfs__pb2.ReadBlockRequest.SerializeToString,
                response_deserializer=griddfs__pb2.ReadBlockResponse.FromString,
                _registered_method=True)
        self.DeleteBlock = channel.unary_unary(
                '/griddfs.DataNodeService/DeleteBlock',
                request_serializer=griddfs__pb2.DeleteBlockRequest.SerializeToString,
                response_deserializer=griddfs__pb2.DeleteBlockResponse.FromString,
                _registered_method=True)


class DataNodeServiceServicer(object):
    """==============================
    Servicios del DataNode
    ==============================
    """

    def WriteBlock(self, request_iterator, context):
        """Cliente → DataNode: escribir bloque
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadBlock(self, request, context):
        """Cliente → DataNode: leer bloque
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBlock(self, request, context):
        """Cliente/NameNode → DataNode: borrar bloque
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataNodeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'WriteBlock': grpc.stream_unary_rpc_method_handler(
                    servicer.WriteBlock,
                    request_deserializer=griddfs__pb2.WriteBlockRequest.FromString,
                    response_serializer=griddfs__pb2.WriteBlockResponse.SerializeToString,
            ),
            'ReadBlock': grpc.unary_stream_rpc_method_handler(
                    servicer.ReadBlock,
                    request_deserializer=griddfs__pb2.ReadBlockRequest.FromString,
                    response_serializer=griddfs__pb2.ReadBlockResponse.SerializeToString,
            ),
            'DeleteBlock': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBlock,
                    request_deserializer=griddfs__pb2.DeleteBlockRequest.FromString,
                    response_serializer=griddfs__pb2.DeleteBlockResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'griddfs.DataNodeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('griddfs.DataNodeService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class DataNodeService(object):
    """==============================
    Servicios del DataNode
    ==============================
    """

    @staticmethod
    def WriteBlock(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/griddfs.DataNodeService/WriteBlock',
            griddfs__pb2.WriteBlockRequest.SerializeToString,
            griddfs__pb2.WriteBlockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/griddfs.DataNodeService/ReadBlock',
            griddfs__pb2.ReadBlockRequest.SerializeToString,
            griddfs__pb2.ReadBlockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteBlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/griddfs.DataNodeService/DeleteBlock',
            griddfs__pb2.DeleteBlockRequest.SerializeToString,
            griddfs__pb2.DeleteBlockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
