// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: griddfs.proto
#ifndef GRPC_griddfs_2eproto__INCLUDED
#define GRPC_griddfs_2eproto__INCLUDED

#include "griddfs.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace griddfs {

// ==============================
// Servicios del NameNode
// ==============================
class NameNodeService final {
 public:
  static constexpr char const* service_full_name() {
    return "griddfs.NameNodeService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Autenticación de usuario
    virtual ::grpc::Status LoginUser(::grpc::ClientContext* context, const ::griddfs::LoginRequest& request, ::griddfs::LoginResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::LoginResponse>> AsyncLoginUser(::grpc::ClientContext* context, const ::griddfs::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::LoginResponse>>(AsyncLoginUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::LoginResponse>> PrepareAsyncLoginUser(::grpc::ClientContext* context, const ::griddfs::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::LoginResponse>>(PrepareAsyncLoginUserRaw(context, request, cq));
    }
    // Registrar nuevo usuario
    virtual ::grpc::Status RegisterUser(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest& request, ::griddfs::RegisterUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RegisterUserResponse>> AsyncRegisterUser(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RegisterUserResponse>>(AsyncRegisterUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RegisterUserResponse>> PrepareAsyncRegisterUser(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RegisterUserResponse>>(PrepareAsyncRegisterUserRaw(context, request, cq));
    }
    // Crear un archivo (PUT - fase de planificación)
    virtual ::grpc::Status CreateFile(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest& request, ::griddfs::CreateFileResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::CreateFileResponse>> AsyncCreateFile(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::CreateFileResponse>>(AsyncCreateFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::CreateFileResponse>> PrepareAsyncCreateFile(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::CreateFileResponse>>(PrepareAsyncCreateFileRaw(context, request, cq));
    }
    // Obtener información de un archivo (GET - ubicaciones de bloques)
    virtual ::grpc::Status GetFileInfo(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest& request, ::griddfs::GetFileInfoResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::GetFileInfoResponse>> AsyncGetFileInfo(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::GetFileInfoResponse>>(AsyncGetFileInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::GetFileInfoResponse>> PrepareAsyncGetFileInfo(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::GetFileInfoResponse>>(PrepareAsyncGetFileInfoRaw(context, request, cq));
    }
    // Listar archivos en un directorio
    virtual ::grpc::Status ListFiles(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest& request, ::griddfs::ListFilesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::ListFilesResponse>> AsyncListFiles(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::ListFilesResponse>>(AsyncListFilesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::ListFilesResponse>> PrepareAsyncListFiles(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::ListFilesResponse>>(PrepareAsyncListFilesRaw(context, request, cq));
    }
    // Eliminar un archivo
    virtual ::grpc::Status DeleteFile(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest& request, ::griddfs::DeleteFileResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::DeleteFileResponse>> AsyncDeleteFile(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::DeleteFileResponse>>(AsyncDeleteFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::DeleteFileResponse>> PrepareAsyncDeleteFile(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::DeleteFileResponse>>(PrepareAsyncDeleteFileRaw(context, request, cq));
    }
    // Crear un directorio
    virtual ::grpc::Status CreateDirectory(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest& request, ::griddfs::CreateDirectoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::CreateDirectoryResponse>> AsyncCreateDirectory(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::CreateDirectoryResponse>>(AsyncCreateDirectoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::CreateDirectoryResponse>> PrepareAsyncCreateDirectory(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::CreateDirectoryResponse>>(PrepareAsyncCreateDirectoryRaw(context, request, cq));
    }
    // Eliminar un directorio
    virtual ::grpc::Status RemoveDirectory(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest& request, ::griddfs::RemoveDirectoryResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RemoveDirectoryResponse>> AsyncRemoveDirectory(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RemoveDirectoryResponse>>(AsyncRemoveDirectoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RemoveDirectoryResponse>> PrepareAsyncRemoveDirectory(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RemoveDirectoryResponse>>(PrepareAsyncRemoveDirectoryRaw(context, request, cq));
    }
    // Registro de DataNode
    virtual ::grpc::Status RegisterDataNode(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest& request, ::griddfs::RegisterDataNodeResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RegisterDataNodeResponse>> AsyncRegisterDataNode(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RegisterDataNodeResponse>>(AsyncRegisterDataNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RegisterDataNodeResponse>> PrepareAsyncRegisterDataNode(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RegisterDataNodeResponse>>(PrepareAsyncRegisterDataNodeRaw(context, request, cq));
    }
    // Heartbeat de un DataNode
    virtual ::grpc::Status Heartbeat(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest& request, ::griddfs::HeartbeatResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::HeartbeatResponse>> AsyncHeartbeat(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::HeartbeatResponse>>(AsyncHeartbeatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::HeartbeatResponse>> PrepareAsyncHeartbeat(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::HeartbeatResponse>>(PrepareAsyncHeartbeatRaw(context, request, cq));
    }
    // Reporte de bloques de un DataNode
    virtual ::grpc::Status BlockReport(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest& request, ::griddfs::BlockReportResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::BlockReportResponse>> AsyncBlockReport(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::BlockReportResponse>>(AsyncBlockReportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::BlockReportResponse>> PrepareAsyncBlockReport(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::BlockReportResponse>>(PrepareAsyncBlockReportRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Autenticación de usuario
      virtual void LoginUser(::grpc::ClientContext* context, const ::griddfs::LoginRequest* request, ::griddfs::LoginResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void LoginUser(::grpc::ClientContext* context, const ::griddfs::LoginRequest* request, ::griddfs::LoginResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Registrar nuevo usuario
      virtual void RegisterUser(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest* request, ::griddfs::RegisterUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RegisterUser(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest* request, ::griddfs::RegisterUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Crear un archivo (PUT - fase de planificación)
      virtual void CreateFile(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest* request, ::griddfs::CreateFileResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateFile(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest* request, ::griddfs::CreateFileResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Obtener información de un archivo (GET - ubicaciones de bloques)
      virtual void GetFileInfo(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest* request, ::griddfs::GetFileInfoResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFileInfo(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest* request, ::griddfs::GetFileInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Listar archivos en un directorio
      virtual void ListFiles(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest* request, ::griddfs::ListFilesResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListFiles(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest* request, ::griddfs::ListFilesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Eliminar un archivo
      virtual void DeleteFile(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest* request, ::griddfs::DeleteFileResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteFile(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest* request, ::griddfs::DeleteFileResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Crear un directorio
      virtual void CreateDirectory(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest* request, ::griddfs::CreateDirectoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateDirectory(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest* request, ::griddfs::CreateDirectoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Eliminar un directorio
      virtual void RemoveDirectory(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest* request, ::griddfs::RemoveDirectoryResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveDirectory(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest* request, ::griddfs::RemoveDirectoryResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Registro de DataNode
      virtual void RegisterDataNode(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest* request, ::griddfs::RegisterDataNodeResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RegisterDataNode(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest* request, ::griddfs::RegisterDataNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Heartbeat de un DataNode
      virtual void Heartbeat(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest* request, ::griddfs::HeartbeatResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Heartbeat(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest* request, ::griddfs::HeartbeatResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Reporte de bloques de un DataNode
      virtual void BlockReport(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest* request, ::griddfs::BlockReportResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BlockReport(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest* request, ::griddfs::BlockReportResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::LoginResponse>* AsyncLoginUserRaw(::grpc::ClientContext* context, const ::griddfs::LoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::LoginResponse>* PrepareAsyncLoginUserRaw(::grpc::ClientContext* context, const ::griddfs::LoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RegisterUserResponse>* AsyncRegisterUserRaw(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RegisterUserResponse>* PrepareAsyncRegisterUserRaw(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::CreateFileResponse>* AsyncCreateFileRaw(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::CreateFileResponse>* PrepareAsyncCreateFileRaw(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::GetFileInfoResponse>* AsyncGetFileInfoRaw(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::GetFileInfoResponse>* PrepareAsyncGetFileInfoRaw(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::ListFilesResponse>* AsyncListFilesRaw(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::ListFilesResponse>* PrepareAsyncListFilesRaw(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::DeleteFileResponse>* AsyncDeleteFileRaw(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::DeleteFileResponse>* PrepareAsyncDeleteFileRaw(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::CreateDirectoryResponse>* AsyncCreateDirectoryRaw(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::CreateDirectoryResponse>* PrepareAsyncCreateDirectoryRaw(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RemoveDirectoryResponse>* AsyncRemoveDirectoryRaw(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RemoveDirectoryResponse>* PrepareAsyncRemoveDirectoryRaw(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RegisterDataNodeResponse>* AsyncRegisterDataNodeRaw(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::RegisterDataNodeResponse>* PrepareAsyncRegisterDataNodeRaw(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::HeartbeatResponse>* AsyncHeartbeatRaw(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::HeartbeatResponse>* PrepareAsyncHeartbeatRaw(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::BlockReportResponse>* AsyncBlockReportRaw(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::BlockReportResponse>* PrepareAsyncBlockReportRaw(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status LoginUser(::grpc::ClientContext* context, const ::griddfs::LoginRequest& request, ::griddfs::LoginResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::LoginResponse>> AsyncLoginUser(::grpc::ClientContext* context, const ::griddfs::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::LoginResponse>>(AsyncLoginUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::LoginResponse>> PrepareAsyncLoginUser(::grpc::ClientContext* context, const ::griddfs::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::LoginResponse>>(PrepareAsyncLoginUserRaw(context, request, cq));
    }
    ::grpc::Status RegisterUser(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest& request, ::griddfs::RegisterUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::RegisterUserResponse>> AsyncRegisterUser(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::RegisterUserResponse>>(AsyncRegisterUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::RegisterUserResponse>> PrepareAsyncRegisterUser(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::RegisterUserResponse>>(PrepareAsyncRegisterUserRaw(context, request, cq));
    }
    ::grpc::Status CreateFile(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest& request, ::griddfs::CreateFileResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::CreateFileResponse>> AsyncCreateFile(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::CreateFileResponse>>(AsyncCreateFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::CreateFileResponse>> PrepareAsyncCreateFile(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::CreateFileResponse>>(PrepareAsyncCreateFileRaw(context, request, cq));
    }
    ::grpc::Status GetFileInfo(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest& request, ::griddfs::GetFileInfoResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::GetFileInfoResponse>> AsyncGetFileInfo(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::GetFileInfoResponse>>(AsyncGetFileInfoRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::GetFileInfoResponse>> PrepareAsyncGetFileInfo(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::GetFileInfoResponse>>(PrepareAsyncGetFileInfoRaw(context, request, cq));
    }
    ::grpc::Status ListFiles(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest& request, ::griddfs::ListFilesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::ListFilesResponse>> AsyncListFiles(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::ListFilesResponse>>(AsyncListFilesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::ListFilesResponse>> PrepareAsyncListFiles(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::ListFilesResponse>>(PrepareAsyncListFilesRaw(context, request, cq));
    }
    ::grpc::Status DeleteFile(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest& request, ::griddfs::DeleteFileResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::DeleteFileResponse>> AsyncDeleteFile(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::DeleteFileResponse>>(AsyncDeleteFileRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::DeleteFileResponse>> PrepareAsyncDeleteFile(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::DeleteFileResponse>>(PrepareAsyncDeleteFileRaw(context, request, cq));
    }
    ::grpc::Status CreateDirectory(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest& request, ::griddfs::CreateDirectoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::CreateDirectoryResponse>> AsyncCreateDirectory(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::CreateDirectoryResponse>>(AsyncCreateDirectoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::CreateDirectoryResponse>> PrepareAsyncCreateDirectory(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::CreateDirectoryResponse>>(PrepareAsyncCreateDirectoryRaw(context, request, cq));
    }
    ::grpc::Status RemoveDirectory(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest& request, ::griddfs::RemoveDirectoryResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::RemoveDirectoryResponse>> AsyncRemoveDirectory(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::RemoveDirectoryResponse>>(AsyncRemoveDirectoryRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::RemoveDirectoryResponse>> PrepareAsyncRemoveDirectory(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::RemoveDirectoryResponse>>(PrepareAsyncRemoveDirectoryRaw(context, request, cq));
    }
    ::grpc::Status RegisterDataNode(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest& request, ::griddfs::RegisterDataNodeResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::RegisterDataNodeResponse>> AsyncRegisterDataNode(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::RegisterDataNodeResponse>>(AsyncRegisterDataNodeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::RegisterDataNodeResponse>> PrepareAsyncRegisterDataNode(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::RegisterDataNodeResponse>>(PrepareAsyncRegisterDataNodeRaw(context, request, cq));
    }
    ::grpc::Status Heartbeat(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest& request, ::griddfs::HeartbeatResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::HeartbeatResponse>> AsyncHeartbeat(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::HeartbeatResponse>>(AsyncHeartbeatRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::HeartbeatResponse>> PrepareAsyncHeartbeat(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::HeartbeatResponse>>(PrepareAsyncHeartbeatRaw(context, request, cq));
    }
    ::grpc::Status BlockReport(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest& request, ::griddfs::BlockReportResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::BlockReportResponse>> AsyncBlockReport(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::BlockReportResponse>>(AsyncBlockReportRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::BlockReportResponse>> PrepareAsyncBlockReport(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::BlockReportResponse>>(PrepareAsyncBlockReportRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void LoginUser(::grpc::ClientContext* context, const ::griddfs::LoginRequest* request, ::griddfs::LoginResponse* response, std::function<void(::grpc::Status)>) override;
      void LoginUser(::grpc::ClientContext* context, const ::griddfs::LoginRequest* request, ::griddfs::LoginResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RegisterUser(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest* request, ::griddfs::RegisterUserResponse* response, std::function<void(::grpc::Status)>) override;
      void RegisterUser(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest* request, ::griddfs::RegisterUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateFile(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest* request, ::griddfs::CreateFileResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateFile(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest* request, ::griddfs::CreateFileResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFileInfo(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest* request, ::griddfs::GetFileInfoResponse* response, std::function<void(::grpc::Status)>) override;
      void GetFileInfo(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest* request, ::griddfs::GetFileInfoResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListFiles(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest* request, ::griddfs::ListFilesResponse* response, std::function<void(::grpc::Status)>) override;
      void ListFiles(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest* request, ::griddfs::ListFilesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteFile(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest* request, ::griddfs::DeleteFileResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteFile(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest* request, ::griddfs::DeleteFileResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CreateDirectory(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest* request, ::griddfs::CreateDirectoryResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateDirectory(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest* request, ::griddfs::CreateDirectoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveDirectory(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest* request, ::griddfs::RemoveDirectoryResponse* response, std::function<void(::grpc::Status)>) override;
      void RemoveDirectory(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest* request, ::griddfs::RemoveDirectoryResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RegisterDataNode(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest* request, ::griddfs::RegisterDataNodeResponse* response, std::function<void(::grpc::Status)>) override;
      void RegisterDataNode(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest* request, ::griddfs::RegisterDataNodeResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Heartbeat(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest* request, ::griddfs::HeartbeatResponse* response, std::function<void(::grpc::Status)>) override;
      void Heartbeat(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest* request, ::griddfs::HeartbeatResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BlockReport(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest* request, ::griddfs::BlockReportResponse* response, std::function<void(::grpc::Status)>) override;
      void BlockReport(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest* request, ::griddfs::BlockReportResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::griddfs::LoginResponse>* AsyncLoginUserRaw(::grpc::ClientContext* context, const ::griddfs::LoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::LoginResponse>* PrepareAsyncLoginUserRaw(::grpc::ClientContext* context, const ::griddfs::LoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::RegisterUserResponse>* AsyncRegisterUserRaw(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::RegisterUserResponse>* PrepareAsyncRegisterUserRaw(::grpc::ClientContext* context, const ::griddfs::RegisterUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::CreateFileResponse>* AsyncCreateFileRaw(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::CreateFileResponse>* PrepareAsyncCreateFileRaw(::grpc::ClientContext* context, const ::griddfs::CreateFileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::GetFileInfoResponse>* AsyncGetFileInfoRaw(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::GetFileInfoResponse>* PrepareAsyncGetFileInfoRaw(::grpc::ClientContext* context, const ::griddfs::GetFileInfoRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::ListFilesResponse>* AsyncListFilesRaw(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::ListFilesResponse>* PrepareAsyncListFilesRaw(::grpc::ClientContext* context, const ::griddfs::ListFilesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::DeleteFileResponse>* AsyncDeleteFileRaw(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::DeleteFileResponse>* PrepareAsyncDeleteFileRaw(::grpc::ClientContext* context, const ::griddfs::DeleteFileRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::CreateDirectoryResponse>* AsyncCreateDirectoryRaw(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::CreateDirectoryResponse>* PrepareAsyncCreateDirectoryRaw(::grpc::ClientContext* context, const ::griddfs::CreateDirectoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::RemoveDirectoryResponse>* AsyncRemoveDirectoryRaw(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::RemoveDirectoryResponse>* PrepareAsyncRemoveDirectoryRaw(::grpc::ClientContext* context, const ::griddfs::RemoveDirectoryRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::RegisterDataNodeResponse>* AsyncRegisterDataNodeRaw(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::RegisterDataNodeResponse>* PrepareAsyncRegisterDataNodeRaw(::grpc::ClientContext* context, const ::griddfs::RegisterDataNodeRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::HeartbeatResponse>* AsyncHeartbeatRaw(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::HeartbeatResponse>* PrepareAsyncHeartbeatRaw(::grpc::ClientContext* context, const ::griddfs::HeartbeatRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::BlockReportResponse>* AsyncBlockReportRaw(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::BlockReportResponse>* PrepareAsyncBlockReportRaw(::grpc::ClientContext* context, const ::griddfs::BlockReportRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_LoginUser_;
    const ::grpc::internal::RpcMethod rpcmethod_RegisterUser_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateFile_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFileInfo_;
    const ::grpc::internal::RpcMethod rpcmethod_ListFiles_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteFile_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateDirectory_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveDirectory_;
    const ::grpc::internal::RpcMethod rpcmethod_RegisterDataNode_;
    const ::grpc::internal::RpcMethod rpcmethod_Heartbeat_;
    const ::grpc::internal::RpcMethod rpcmethod_BlockReport_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Autenticación de usuario
    virtual ::grpc::Status LoginUser(::grpc::ServerContext* context, const ::griddfs::LoginRequest* request, ::griddfs::LoginResponse* response);
    // Registrar nuevo usuario
    virtual ::grpc::Status RegisterUser(::grpc::ServerContext* context, const ::griddfs::RegisterUserRequest* request, ::griddfs::RegisterUserResponse* response);
    // Crear un archivo (PUT - fase de planificación)
    virtual ::grpc::Status CreateFile(::grpc::ServerContext* context, const ::griddfs::CreateFileRequest* request, ::griddfs::CreateFileResponse* response);
    // Obtener información de un archivo (GET - ubicaciones de bloques)
    virtual ::grpc::Status GetFileInfo(::grpc::ServerContext* context, const ::griddfs::GetFileInfoRequest* request, ::griddfs::GetFileInfoResponse* response);
    // Listar archivos en un directorio
    virtual ::grpc::Status ListFiles(::grpc::ServerContext* context, const ::griddfs::ListFilesRequest* request, ::griddfs::ListFilesResponse* response);
    // Eliminar un archivo
    virtual ::grpc::Status DeleteFile(::grpc::ServerContext* context, const ::griddfs::DeleteFileRequest* request, ::griddfs::DeleteFileResponse* response);
    // Crear un directorio
    virtual ::grpc::Status CreateDirectory(::grpc::ServerContext* context, const ::griddfs::CreateDirectoryRequest* request, ::griddfs::CreateDirectoryResponse* response);
    // Eliminar un directorio
    virtual ::grpc::Status RemoveDirectory(::grpc::ServerContext* context, const ::griddfs::RemoveDirectoryRequest* request, ::griddfs::RemoveDirectoryResponse* response);
    // Registro de DataNode
    virtual ::grpc::Status RegisterDataNode(::grpc::ServerContext* context, const ::griddfs::RegisterDataNodeRequest* request, ::griddfs::RegisterDataNodeResponse* response);
    // Heartbeat de un DataNode
    virtual ::grpc::Status Heartbeat(::grpc::ServerContext* context, const ::griddfs::HeartbeatRequest* request, ::griddfs::HeartbeatResponse* response);
    // Reporte de bloques de un DataNode
    virtual ::grpc::Status BlockReport(::grpc::ServerContext* context, const ::griddfs::BlockReportRequest* request, ::griddfs::BlockReportResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_LoginUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_LoginUser() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_LoginUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginUser(::grpc::ServerContext* /*context*/, const ::griddfs::LoginRequest* /*request*/, ::griddfs::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoginUser(::grpc::ServerContext* context, ::griddfs::LoginRequest* request, ::grpc::ServerAsyncResponseWriter< ::griddfs::LoginResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RegisterUser() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::griddfs::RegisterUserRequest* /*request*/, ::griddfs::RegisterUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterUser(::grpc::ServerContext* context, ::griddfs::RegisterUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::griddfs::RegisterUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateFile() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_CreateFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateFile(::grpc::ServerContext* /*context*/, const ::griddfs::CreateFileRequest* /*request*/, ::griddfs::CreateFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateFile(::grpc::ServerContext* context, ::griddfs::CreateFileRequest* request, ::grpc::ServerAsyncResponseWriter< ::griddfs::CreateFileResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFileInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFileInfo() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetFileInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileInfo(::grpc::ServerContext* /*context*/, const ::griddfs::GetFileInfoRequest* /*request*/, ::griddfs::GetFileInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFileInfo(::grpc::ServerContext* context, ::griddfs::GetFileInfoRequest* request, ::grpc::ServerAsyncResponseWriter< ::griddfs::GetFileInfoResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListFiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListFiles() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListFiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFiles(::grpc::ServerContext* /*context*/, const ::griddfs::ListFilesRequest* /*request*/, ::griddfs::ListFilesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListFiles(::grpc::ServerContext* context, ::griddfs::ListFilesRequest* request, ::grpc::ServerAsyncResponseWriter< ::griddfs::ListFilesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteFile() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeleteFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFile(::grpc::ServerContext* /*context*/, const ::griddfs::DeleteFileRequest* /*request*/, ::griddfs::DeleteFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteFile(::grpc::ServerContext* context, ::griddfs::DeleteFileRequest* request, ::grpc::ServerAsyncResponseWriter< ::griddfs::DeleteFileResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateDirectory() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_CreateDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDirectory(::grpc::ServerContext* /*context*/, const ::griddfs::CreateDirectoryRequest* /*request*/, ::griddfs::CreateDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDirectory(::grpc::ServerContext* context, ::griddfs::CreateDirectoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::griddfs::CreateDirectoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveDirectory() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_RemoveDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveDirectory(::grpc::ServerContext* /*context*/, const ::griddfs::RemoveDirectoryRequest* /*request*/, ::griddfs::RemoveDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveDirectory(::grpc::ServerContext* context, ::griddfs::RemoveDirectoryRequest* request, ::grpc::ServerAsyncResponseWriter< ::griddfs::RemoveDirectoryResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RegisterDataNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RegisterDataNode() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_RegisterDataNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterDataNode(::grpc::ServerContext* /*context*/, const ::griddfs::RegisterDataNodeRequest* /*request*/, ::griddfs::RegisterDataNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterDataNode(::grpc::ServerContext* context, ::griddfs::RegisterDataNodeRequest* request, ::grpc::ServerAsyncResponseWriter< ::griddfs::RegisterDataNodeResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Heartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Heartbeat() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_Heartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Heartbeat(::grpc::ServerContext* /*context*/, const ::griddfs::HeartbeatRequest* /*request*/, ::griddfs::HeartbeatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHeartbeat(::grpc::ServerContext* context, ::griddfs::HeartbeatRequest* request, ::grpc::ServerAsyncResponseWriter< ::griddfs::HeartbeatResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BlockReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BlockReport() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_BlockReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BlockReport(::grpc::ServerContext* /*context*/, const ::griddfs::BlockReportRequest* /*request*/, ::griddfs::BlockReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBlockReport(::grpc::ServerContext* context, ::griddfs::BlockReportRequest* request, ::grpc::ServerAsyncResponseWriter< ::griddfs::BlockReportResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_LoginUser<WithAsyncMethod_RegisterUser<WithAsyncMethod_CreateFile<WithAsyncMethod_GetFileInfo<WithAsyncMethod_ListFiles<WithAsyncMethod_DeleteFile<WithAsyncMethod_CreateDirectory<WithAsyncMethod_RemoveDirectory<WithAsyncMethod_RegisterDataNode<WithAsyncMethod_Heartbeat<WithAsyncMethod_BlockReport<Service > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_LoginUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_LoginUser() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::griddfs::LoginRequest, ::griddfs::LoginResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::griddfs::LoginRequest* request, ::griddfs::LoginResponse* response) { return this->LoginUser(context, request, response); }));}
    void SetMessageAllocatorFor_LoginUser(
        ::grpc::MessageAllocator< ::griddfs::LoginRequest, ::griddfs::LoginResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::griddfs::LoginRequest, ::griddfs::LoginResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_LoginUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginUser(::grpc::ServerContext* /*context*/, const ::griddfs::LoginRequest* /*request*/, ::griddfs::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LoginUser(
      ::grpc::CallbackServerContext* /*context*/, const ::griddfs::LoginRequest* /*request*/, ::griddfs::LoginResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RegisterUser() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::griddfs::RegisterUserRequest, ::griddfs::RegisterUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::griddfs::RegisterUserRequest* request, ::griddfs::RegisterUserResponse* response) { return this->RegisterUser(context, request, response); }));}
    void SetMessageAllocatorFor_RegisterUser(
        ::grpc::MessageAllocator< ::griddfs::RegisterUserRequest, ::griddfs::RegisterUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::griddfs::RegisterUserRequest, ::griddfs::RegisterUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::griddfs::RegisterUserRequest* /*request*/, ::griddfs::RegisterUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RegisterUser(
      ::grpc::CallbackServerContext* /*context*/, const ::griddfs::RegisterUserRequest* /*request*/, ::griddfs::RegisterUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateFile() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::griddfs::CreateFileRequest, ::griddfs::CreateFileResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::griddfs::CreateFileRequest* request, ::griddfs::CreateFileResponse* response) { return this->CreateFile(context, request, response); }));}
    void SetMessageAllocatorFor_CreateFile(
        ::grpc::MessageAllocator< ::griddfs::CreateFileRequest, ::griddfs::CreateFileResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::griddfs::CreateFileRequest, ::griddfs::CreateFileResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateFile(::grpc::ServerContext* /*context*/, const ::griddfs::CreateFileRequest* /*request*/, ::griddfs::CreateFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateFile(
      ::grpc::CallbackServerContext* /*context*/, const ::griddfs::CreateFileRequest* /*request*/, ::griddfs::CreateFileResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFileInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFileInfo() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::griddfs::GetFileInfoRequest, ::griddfs::GetFileInfoResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::griddfs::GetFileInfoRequest* request, ::griddfs::GetFileInfoResponse* response) { return this->GetFileInfo(context, request, response); }));}
    void SetMessageAllocatorFor_GetFileInfo(
        ::grpc::MessageAllocator< ::griddfs::GetFileInfoRequest, ::griddfs::GetFileInfoResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::griddfs::GetFileInfoRequest, ::griddfs::GetFileInfoResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFileInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileInfo(::grpc::ServerContext* /*context*/, const ::griddfs::GetFileInfoRequest* /*request*/, ::griddfs::GetFileInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFileInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::griddfs::GetFileInfoRequest* /*request*/, ::griddfs::GetFileInfoResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListFiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListFiles() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::griddfs::ListFilesRequest, ::griddfs::ListFilesResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::griddfs::ListFilesRequest* request, ::griddfs::ListFilesResponse* response) { return this->ListFiles(context, request, response); }));}
    void SetMessageAllocatorFor_ListFiles(
        ::grpc::MessageAllocator< ::griddfs::ListFilesRequest, ::griddfs::ListFilesResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::griddfs::ListFilesRequest, ::griddfs::ListFilesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListFiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFiles(::grpc::ServerContext* /*context*/, const ::griddfs::ListFilesRequest* /*request*/, ::griddfs::ListFilesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListFiles(
      ::grpc::CallbackServerContext* /*context*/, const ::griddfs::ListFilesRequest* /*request*/, ::griddfs::ListFilesResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteFile() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::griddfs::DeleteFileRequest, ::griddfs::DeleteFileResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::griddfs::DeleteFileRequest* request, ::griddfs::DeleteFileResponse* response) { return this->DeleteFile(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteFile(
        ::grpc::MessageAllocator< ::griddfs::DeleteFileRequest, ::griddfs::DeleteFileResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::griddfs::DeleteFileRequest, ::griddfs::DeleteFileResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFile(::grpc::ServerContext* /*context*/, const ::griddfs::DeleteFileRequest* /*request*/, ::griddfs::DeleteFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteFile(
      ::grpc::CallbackServerContext* /*context*/, const ::griddfs::DeleteFileRequest* /*request*/, ::griddfs::DeleteFileResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CreateDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateDirectory() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::griddfs::CreateDirectoryRequest, ::griddfs::CreateDirectoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::griddfs::CreateDirectoryRequest* request, ::griddfs::CreateDirectoryResponse* response) { return this->CreateDirectory(context, request, response); }));}
    void SetMessageAllocatorFor_CreateDirectory(
        ::grpc::MessageAllocator< ::griddfs::CreateDirectoryRequest, ::griddfs::CreateDirectoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::griddfs::CreateDirectoryRequest, ::griddfs::CreateDirectoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDirectory(::grpc::ServerContext* /*context*/, const ::griddfs::CreateDirectoryRequest* /*request*/, ::griddfs::CreateDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDirectory(
      ::grpc::CallbackServerContext* /*context*/, const ::griddfs::CreateDirectoryRequest* /*request*/, ::griddfs::CreateDirectoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveDirectory() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::griddfs::RemoveDirectoryRequest, ::griddfs::RemoveDirectoryResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::griddfs::RemoveDirectoryRequest* request, ::griddfs::RemoveDirectoryResponse* response) { return this->RemoveDirectory(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveDirectory(
        ::grpc::MessageAllocator< ::griddfs::RemoveDirectoryRequest, ::griddfs::RemoveDirectoryResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::griddfs::RemoveDirectoryRequest, ::griddfs::RemoveDirectoryResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveDirectory(::grpc::ServerContext* /*context*/, const ::griddfs::RemoveDirectoryRequest* /*request*/, ::griddfs::RemoveDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveDirectory(
      ::grpc::CallbackServerContext* /*context*/, const ::griddfs::RemoveDirectoryRequest* /*request*/, ::griddfs::RemoveDirectoryResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RegisterDataNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RegisterDataNode() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::griddfs::RegisterDataNodeRequest, ::griddfs::RegisterDataNodeResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::griddfs::RegisterDataNodeRequest* request, ::griddfs::RegisterDataNodeResponse* response) { return this->RegisterDataNode(context, request, response); }));}
    void SetMessageAllocatorFor_RegisterDataNode(
        ::grpc::MessageAllocator< ::griddfs::RegisterDataNodeRequest, ::griddfs::RegisterDataNodeResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::griddfs::RegisterDataNodeRequest, ::griddfs::RegisterDataNodeResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RegisterDataNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterDataNode(::grpc::ServerContext* /*context*/, const ::griddfs::RegisterDataNodeRequest* /*request*/, ::griddfs::RegisterDataNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RegisterDataNode(
      ::grpc::CallbackServerContext* /*context*/, const ::griddfs::RegisterDataNodeRequest* /*request*/, ::griddfs::RegisterDataNodeResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Heartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Heartbeat() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::griddfs::HeartbeatRequest, ::griddfs::HeartbeatResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::griddfs::HeartbeatRequest* request, ::griddfs::HeartbeatResponse* response) { return this->Heartbeat(context, request, response); }));}
    void SetMessageAllocatorFor_Heartbeat(
        ::grpc::MessageAllocator< ::griddfs::HeartbeatRequest, ::griddfs::HeartbeatResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::griddfs::HeartbeatRequest, ::griddfs::HeartbeatResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Heartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Heartbeat(::grpc::ServerContext* /*context*/, const ::griddfs::HeartbeatRequest* /*request*/, ::griddfs::HeartbeatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Heartbeat(
      ::grpc::CallbackServerContext* /*context*/, const ::griddfs::HeartbeatRequest* /*request*/, ::griddfs::HeartbeatResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BlockReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BlockReport() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::griddfs::BlockReportRequest, ::griddfs::BlockReportResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::griddfs::BlockReportRequest* request, ::griddfs::BlockReportResponse* response) { return this->BlockReport(context, request, response); }));}
    void SetMessageAllocatorFor_BlockReport(
        ::grpc::MessageAllocator< ::griddfs::BlockReportRequest, ::griddfs::BlockReportResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::griddfs::BlockReportRequest, ::griddfs::BlockReportResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BlockReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BlockReport(::grpc::ServerContext* /*context*/, const ::griddfs::BlockReportRequest* /*request*/, ::griddfs::BlockReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BlockReport(
      ::grpc::CallbackServerContext* /*context*/, const ::griddfs::BlockReportRequest* /*request*/, ::griddfs::BlockReportResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_LoginUser<WithCallbackMethod_RegisterUser<WithCallbackMethod_CreateFile<WithCallbackMethod_GetFileInfo<WithCallbackMethod_ListFiles<WithCallbackMethod_DeleteFile<WithCallbackMethod_CreateDirectory<WithCallbackMethod_RemoveDirectory<WithCallbackMethod_RegisterDataNode<WithCallbackMethod_Heartbeat<WithCallbackMethod_BlockReport<Service > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_LoginUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_LoginUser() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_LoginUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginUser(::grpc::ServerContext* /*context*/, const ::griddfs::LoginRequest* /*request*/, ::griddfs::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RegisterUser() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::griddfs::RegisterUserRequest* /*request*/, ::griddfs::RegisterUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateFile() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_CreateFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateFile(::grpc::ServerContext* /*context*/, const ::griddfs::CreateFileRequest* /*request*/, ::griddfs::CreateFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFileInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFileInfo() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetFileInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileInfo(::grpc::ServerContext* /*context*/, const ::griddfs::GetFileInfoRequest* /*request*/, ::griddfs::GetFileInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListFiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListFiles() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListFiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFiles(::grpc::ServerContext* /*context*/, const ::griddfs::ListFilesRequest* /*request*/, ::griddfs::ListFilesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteFile() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeleteFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFile(::grpc::ServerContext* /*context*/, const ::griddfs::DeleteFileRequest* /*request*/, ::griddfs::DeleteFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateDirectory() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_CreateDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDirectory(::grpc::ServerContext* /*context*/, const ::griddfs::CreateDirectoryRequest* /*request*/, ::griddfs::CreateDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveDirectory() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_RemoveDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveDirectory(::grpc::ServerContext* /*context*/, const ::griddfs::RemoveDirectoryRequest* /*request*/, ::griddfs::RemoveDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RegisterDataNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RegisterDataNode() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_RegisterDataNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterDataNode(::grpc::ServerContext* /*context*/, const ::griddfs::RegisterDataNodeRequest* /*request*/, ::griddfs::RegisterDataNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Heartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Heartbeat() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_Heartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Heartbeat(::grpc::ServerContext* /*context*/, const ::griddfs::HeartbeatRequest* /*request*/, ::griddfs::HeartbeatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BlockReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BlockReport() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_BlockReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BlockReport(::grpc::ServerContext* /*context*/, const ::griddfs::BlockReportRequest* /*request*/, ::griddfs::BlockReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_LoginUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_LoginUser() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_LoginUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginUser(::grpc::ServerContext* /*context*/, const ::griddfs::LoginRequest* /*request*/, ::griddfs::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLoginUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RegisterUser() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::griddfs::RegisterUserRequest* /*request*/, ::griddfs::RegisterUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateFile() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_CreateFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateFile(::grpc::ServerContext* /*context*/, const ::griddfs::CreateFileRequest* /*request*/, ::griddfs::CreateFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateFile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFileInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFileInfo() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetFileInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileInfo(::grpc::ServerContext* /*context*/, const ::griddfs::GetFileInfoRequest* /*request*/, ::griddfs::GetFileInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFileInfo(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListFiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListFiles() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ListFiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFiles(::grpc::ServerContext* /*context*/, const ::griddfs::ListFilesRequest* /*request*/, ::griddfs::ListFilesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListFiles(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteFile() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeleteFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFile(::grpc::ServerContext* /*context*/, const ::griddfs::DeleteFileRequest* /*request*/, ::griddfs::DeleteFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteFile(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateDirectory() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_CreateDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDirectory(::grpc::ServerContext* /*context*/, const ::griddfs::CreateDirectoryRequest* /*request*/, ::griddfs::CreateDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateDirectory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveDirectory() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_RemoveDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveDirectory(::grpc::ServerContext* /*context*/, const ::griddfs::RemoveDirectoryRequest* /*request*/, ::griddfs::RemoveDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveDirectory(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RegisterDataNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RegisterDataNode() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_RegisterDataNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterDataNode(::grpc::ServerContext* /*context*/, const ::griddfs::RegisterDataNodeRequest* /*request*/, ::griddfs::RegisterDataNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRegisterDataNode(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Heartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Heartbeat() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_Heartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Heartbeat(::grpc::ServerContext* /*context*/, const ::griddfs::HeartbeatRequest* /*request*/, ::griddfs::HeartbeatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHeartbeat(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BlockReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BlockReport() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_BlockReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BlockReport(::grpc::ServerContext* /*context*/, const ::griddfs::BlockReportRequest* /*request*/, ::griddfs::BlockReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBlockReport(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_LoginUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_LoginUser() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->LoginUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_LoginUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status LoginUser(::grpc::ServerContext* /*context*/, const ::griddfs::LoginRequest* /*request*/, ::griddfs::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* LoginUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RegisterUser() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RegisterUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::griddfs::RegisterUserRequest* /*request*/, ::griddfs::RegisterUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RegisterUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateFile() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateFile(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateFile(::grpc::ServerContext* /*context*/, const ::griddfs::CreateFileRequest* /*request*/, ::griddfs::CreateFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateFile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFileInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFileInfo() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFileInfo(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFileInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFileInfo(::grpc::ServerContext* /*context*/, const ::griddfs::GetFileInfoRequest* /*request*/, ::griddfs::GetFileInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFileInfo(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListFiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListFiles() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListFiles(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListFiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListFiles(::grpc::ServerContext* /*context*/, const ::griddfs::ListFilesRequest* /*request*/, ::griddfs::ListFilesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListFiles(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteFile() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteFile(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteFile(::grpc::ServerContext* /*context*/, const ::griddfs::DeleteFileRequest* /*request*/, ::griddfs::DeleteFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteFile(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateDirectory() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateDirectory(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateDirectory(::grpc::ServerContext* /*context*/, const ::griddfs::CreateDirectoryRequest* /*request*/, ::griddfs::CreateDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateDirectory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveDirectory() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveDirectory(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveDirectory(::grpc::ServerContext* /*context*/, const ::griddfs::RemoveDirectoryRequest* /*request*/, ::griddfs::RemoveDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveDirectory(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RegisterDataNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RegisterDataNode() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RegisterDataNode(context, request, response); }));
    }
    ~WithRawCallbackMethod_RegisterDataNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RegisterDataNode(::grpc::ServerContext* /*context*/, const ::griddfs::RegisterDataNodeRequest* /*request*/, ::griddfs::RegisterDataNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RegisterDataNode(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Heartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Heartbeat() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Heartbeat(context, request, response); }));
    }
    ~WithRawCallbackMethod_Heartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Heartbeat(::grpc::ServerContext* /*context*/, const ::griddfs::HeartbeatRequest* /*request*/, ::griddfs::HeartbeatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Heartbeat(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BlockReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BlockReport() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BlockReport(context, request, response); }));
    }
    ~WithRawCallbackMethod_BlockReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BlockReport(::grpc::ServerContext* /*context*/, const ::griddfs::BlockReportRequest* /*request*/, ::griddfs::BlockReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BlockReport(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_LoginUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_LoginUser() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::griddfs::LoginRequest, ::griddfs::LoginResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::griddfs::LoginRequest, ::griddfs::LoginResponse>* streamer) {
                       return this->StreamedLoginUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_LoginUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status LoginUser(::grpc::ServerContext* /*context*/, const ::griddfs::LoginRequest* /*request*/, ::griddfs::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLoginUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::griddfs::LoginRequest,::griddfs::LoginResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RegisterUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RegisterUser() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::griddfs::RegisterUserRequest, ::griddfs::RegisterUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::griddfs::RegisterUserRequest, ::griddfs::RegisterUserResponse>* streamer) {
                       return this->StreamedRegisterUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RegisterUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RegisterUser(::grpc::ServerContext* /*context*/, const ::griddfs::RegisterUserRequest* /*request*/, ::griddfs::RegisterUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRegisterUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::griddfs::RegisterUserRequest,::griddfs::RegisterUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateFile() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::griddfs::CreateFileRequest, ::griddfs::CreateFileResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::griddfs::CreateFileRequest, ::griddfs::CreateFileResponse>* streamer) {
                       return this->StreamedCreateFile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateFile(::grpc::ServerContext* /*context*/, const ::griddfs::CreateFileRequest* /*request*/, ::griddfs::CreateFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateFile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::griddfs::CreateFileRequest,::griddfs::CreateFileResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFileInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFileInfo() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::griddfs::GetFileInfoRequest, ::griddfs::GetFileInfoResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::griddfs::GetFileInfoRequest, ::griddfs::GetFileInfoResponse>* streamer) {
                       return this->StreamedGetFileInfo(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFileInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFileInfo(::grpc::ServerContext* /*context*/, const ::griddfs::GetFileInfoRequest* /*request*/, ::griddfs::GetFileInfoResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFileInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::griddfs::GetFileInfoRequest,::griddfs::GetFileInfoResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListFiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListFiles() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::griddfs::ListFilesRequest, ::griddfs::ListFilesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::griddfs::ListFilesRequest, ::griddfs::ListFilesResponse>* streamer) {
                       return this->StreamedListFiles(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListFiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListFiles(::grpc::ServerContext* /*context*/, const ::griddfs::ListFilesRequest* /*request*/, ::griddfs::ListFilesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListFiles(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::griddfs::ListFilesRequest,::griddfs::ListFilesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteFile : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteFile() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::griddfs::DeleteFileRequest, ::griddfs::DeleteFileResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::griddfs::DeleteFileRequest, ::griddfs::DeleteFileResponse>* streamer) {
                       return this->StreamedDeleteFile(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteFile() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteFile(::grpc::ServerContext* /*context*/, const ::griddfs::DeleteFileRequest* /*request*/, ::griddfs::DeleteFileResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteFile(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::griddfs::DeleteFileRequest,::griddfs::DeleteFileResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateDirectory() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::griddfs::CreateDirectoryRequest, ::griddfs::CreateDirectoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::griddfs::CreateDirectoryRequest, ::griddfs::CreateDirectoryResponse>* streamer) {
                       return this->StreamedCreateDirectory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateDirectory(::grpc::ServerContext* /*context*/, const ::griddfs::CreateDirectoryRequest* /*request*/, ::griddfs::CreateDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateDirectory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::griddfs::CreateDirectoryRequest,::griddfs::CreateDirectoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveDirectory : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveDirectory() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::griddfs::RemoveDirectoryRequest, ::griddfs::RemoveDirectoryResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::griddfs::RemoveDirectoryRequest, ::griddfs::RemoveDirectoryResponse>* streamer) {
                       return this->StreamedRemoveDirectory(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveDirectory() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveDirectory(::grpc::ServerContext* /*context*/, const ::griddfs::RemoveDirectoryRequest* /*request*/, ::griddfs::RemoveDirectoryResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveDirectory(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::griddfs::RemoveDirectoryRequest,::griddfs::RemoveDirectoryResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RegisterDataNode : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RegisterDataNode() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::griddfs::RegisterDataNodeRequest, ::griddfs::RegisterDataNodeResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::griddfs::RegisterDataNodeRequest, ::griddfs::RegisterDataNodeResponse>* streamer) {
                       return this->StreamedRegisterDataNode(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RegisterDataNode() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RegisterDataNode(::grpc::ServerContext* /*context*/, const ::griddfs::RegisterDataNodeRequest* /*request*/, ::griddfs::RegisterDataNodeResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRegisterDataNode(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::griddfs::RegisterDataNodeRequest,::griddfs::RegisterDataNodeResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Heartbeat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Heartbeat() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::griddfs::HeartbeatRequest, ::griddfs::HeartbeatResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::griddfs::HeartbeatRequest, ::griddfs::HeartbeatResponse>* streamer) {
                       return this->StreamedHeartbeat(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Heartbeat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Heartbeat(::grpc::ServerContext* /*context*/, const ::griddfs::HeartbeatRequest* /*request*/, ::griddfs::HeartbeatResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedHeartbeat(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::griddfs::HeartbeatRequest,::griddfs::HeartbeatResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BlockReport : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BlockReport() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::griddfs::BlockReportRequest, ::griddfs::BlockReportResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::griddfs::BlockReportRequest, ::griddfs::BlockReportResponse>* streamer) {
                       return this->StreamedBlockReport(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BlockReport() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BlockReport(::grpc::ServerContext* /*context*/, const ::griddfs::BlockReportRequest* /*request*/, ::griddfs::BlockReportResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBlockReport(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::griddfs::BlockReportRequest,::griddfs::BlockReportResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_LoginUser<WithStreamedUnaryMethod_RegisterUser<WithStreamedUnaryMethod_CreateFile<WithStreamedUnaryMethod_GetFileInfo<WithStreamedUnaryMethod_ListFiles<WithStreamedUnaryMethod_DeleteFile<WithStreamedUnaryMethod_CreateDirectory<WithStreamedUnaryMethod_RemoveDirectory<WithStreamedUnaryMethod_RegisterDataNode<WithStreamedUnaryMethod_Heartbeat<WithStreamedUnaryMethod_BlockReport<Service > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_LoginUser<WithStreamedUnaryMethod_RegisterUser<WithStreamedUnaryMethod_CreateFile<WithStreamedUnaryMethod_GetFileInfo<WithStreamedUnaryMethod_ListFiles<WithStreamedUnaryMethod_DeleteFile<WithStreamedUnaryMethod_CreateDirectory<WithStreamedUnaryMethod_RemoveDirectory<WithStreamedUnaryMethod_RegisterDataNode<WithStreamedUnaryMethod_Heartbeat<WithStreamedUnaryMethod_BlockReport<Service > > > > > > > > > > > StreamedService;
};

// ==============================
// Servicios del DataNode
// ==============================
class DataNodeService final {
 public:
  static constexpr char const* service_full_name() {
    return "griddfs.DataNodeService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Cliente → DataNode: escribir bloque
    std::unique_ptr< ::grpc::ClientWriterInterface< ::griddfs::WriteBlockRequest>> WriteBlock(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response) {
      return std::unique_ptr< ::grpc::ClientWriterInterface< ::griddfs::WriteBlockRequest>>(WriteBlockRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::griddfs::WriteBlockRequest>> AsyncWriteBlock(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::griddfs::WriteBlockRequest>>(AsyncWriteBlockRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::griddfs::WriteBlockRequest>> PrepareAsyncWriteBlock(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::griddfs::WriteBlockRequest>>(PrepareAsyncWriteBlockRaw(context, response, cq));
    }
    // Cliente → DataNode: leer bloque
    std::unique_ptr< ::grpc::ClientReaderInterface< ::griddfs::ReadBlockResponse>> ReadBlock(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::griddfs::ReadBlockResponse>>(ReadBlockRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::griddfs::ReadBlockResponse>> AsyncReadBlock(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::griddfs::ReadBlockResponse>>(AsyncReadBlockRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::griddfs::ReadBlockResponse>> PrepareAsyncReadBlock(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::griddfs::ReadBlockResponse>>(PrepareAsyncReadBlockRaw(context, request, cq));
    }
    // Cliente/NameNode → DataNode: borrar bloque
    virtual ::grpc::Status DeleteBlock(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest& request, ::griddfs::DeleteBlockResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::DeleteBlockResponse>> AsyncDeleteBlock(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::DeleteBlockResponse>>(AsyncDeleteBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::DeleteBlockResponse>> PrepareAsyncDeleteBlock(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::DeleteBlockResponse>>(PrepareAsyncDeleteBlockRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Cliente → DataNode: escribir bloque
      virtual void WriteBlock(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response, ::grpc::ClientWriteReactor< ::griddfs::WriteBlockRequest>* reactor) = 0;
      // Cliente → DataNode: leer bloque
      virtual void ReadBlock(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest* request, ::grpc::ClientReadReactor< ::griddfs::ReadBlockResponse>* reactor) = 0;
      // Cliente/NameNode → DataNode: borrar bloque
      virtual void DeleteBlock(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest* request, ::griddfs::DeleteBlockResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteBlock(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest* request, ::griddfs::DeleteBlockResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientWriterInterface< ::griddfs::WriteBlockRequest>* WriteBlockRaw(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::griddfs::WriteBlockRequest>* AsyncWriteBlockRaw(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::griddfs::WriteBlockRequest>* PrepareAsyncWriteBlockRaw(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::griddfs::ReadBlockResponse>* ReadBlockRaw(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::griddfs::ReadBlockResponse>* AsyncReadBlockRaw(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::griddfs::ReadBlockResponse>* PrepareAsyncReadBlockRaw(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::DeleteBlockResponse>* AsyncDeleteBlockRaw(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::griddfs::DeleteBlockResponse>* PrepareAsyncDeleteBlockRaw(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    std::unique_ptr< ::grpc::ClientWriter< ::griddfs::WriteBlockRequest>> WriteBlock(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response) {
      return std::unique_ptr< ::grpc::ClientWriter< ::griddfs::WriteBlockRequest>>(WriteBlockRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::griddfs::WriteBlockRequest>> AsyncWriteBlock(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::griddfs::WriteBlockRequest>>(AsyncWriteBlockRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::griddfs::WriteBlockRequest>> PrepareAsyncWriteBlock(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::griddfs::WriteBlockRequest>>(PrepareAsyncWriteBlockRaw(context, response, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::griddfs::ReadBlockResponse>> ReadBlock(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::griddfs::ReadBlockResponse>>(ReadBlockRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::griddfs::ReadBlockResponse>> AsyncReadBlock(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::griddfs::ReadBlockResponse>>(AsyncReadBlockRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::griddfs::ReadBlockResponse>> PrepareAsyncReadBlock(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::griddfs::ReadBlockResponse>>(PrepareAsyncReadBlockRaw(context, request, cq));
    }
    ::grpc::Status DeleteBlock(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest& request, ::griddfs::DeleteBlockResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::DeleteBlockResponse>> AsyncDeleteBlock(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::DeleteBlockResponse>>(AsyncDeleteBlockRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::DeleteBlockResponse>> PrepareAsyncDeleteBlock(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::griddfs::DeleteBlockResponse>>(PrepareAsyncDeleteBlockRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void WriteBlock(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response, ::grpc::ClientWriteReactor< ::griddfs::WriteBlockRequest>* reactor) override;
      void ReadBlock(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest* request, ::grpc::ClientReadReactor< ::griddfs::ReadBlockResponse>* reactor) override;
      void DeleteBlock(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest* request, ::griddfs::DeleteBlockResponse* response, std::function<void(::grpc::Status)>) override;
      void DeleteBlock(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest* request, ::griddfs::DeleteBlockResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientWriter< ::griddfs::WriteBlockRequest>* WriteBlockRaw(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response) override;
    ::grpc::ClientAsyncWriter< ::griddfs::WriteBlockRequest>* AsyncWriteBlockRaw(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncWriter< ::griddfs::WriteBlockRequest>* PrepareAsyncWriteBlockRaw(::grpc::ClientContext* context, ::griddfs::WriteBlockResponse* response, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::griddfs::ReadBlockResponse>* ReadBlockRaw(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest& request) override;
    ::grpc::ClientAsyncReader< ::griddfs::ReadBlockResponse>* AsyncReadBlockRaw(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::griddfs::ReadBlockResponse>* PrepareAsyncReadBlockRaw(::grpc::ClientContext* context, const ::griddfs::ReadBlockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::DeleteBlockResponse>* AsyncDeleteBlockRaw(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::griddfs::DeleteBlockResponse>* PrepareAsyncDeleteBlockRaw(::grpc::ClientContext* context, const ::griddfs::DeleteBlockRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_WriteBlock_;
    const ::grpc::internal::RpcMethod rpcmethod_ReadBlock_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteBlock_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Cliente → DataNode: escribir bloque
    virtual ::grpc::Status WriteBlock(::grpc::ServerContext* context, ::grpc::ServerReader< ::griddfs::WriteBlockRequest>* reader, ::griddfs::WriteBlockResponse* response);
    // Cliente → DataNode: leer bloque
    virtual ::grpc::Status ReadBlock(::grpc::ServerContext* context, const ::griddfs::ReadBlockRequest* request, ::grpc::ServerWriter< ::griddfs::ReadBlockResponse>* writer);
    // Cliente/NameNode → DataNode: borrar bloque
    virtual ::grpc::Status DeleteBlock(::grpc::ServerContext* context, const ::griddfs::DeleteBlockRequest* request, ::griddfs::DeleteBlockResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_WriteBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WriteBlock() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_WriteBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBlock(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::griddfs::WriteBlockRequest>* /*reader*/, ::griddfs::WriteBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteBlock(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::griddfs::WriteBlockResponse, ::griddfs::WriteBlockRequest>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(0, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReadBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReadBlock() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ReadBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadBlock(::grpc::ServerContext* /*context*/, const ::griddfs::ReadBlockRequest* /*request*/, ::grpc::ServerWriter< ::griddfs::ReadBlockResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadBlock(::grpc::ServerContext* context, ::griddfs::ReadBlockRequest* request, ::grpc::ServerAsyncWriter< ::griddfs::ReadBlockResponse>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteBlock() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DeleteBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBlock(::grpc::ServerContext* /*context*/, const ::griddfs::DeleteBlockRequest* /*request*/, ::griddfs::DeleteBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteBlock(::grpc::ServerContext* context, ::griddfs::DeleteBlockRequest* request, ::grpc::ServerAsyncResponseWriter< ::griddfs::DeleteBlockResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_WriteBlock<WithAsyncMethod_ReadBlock<WithAsyncMethod_DeleteBlock<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_WriteBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_WriteBlock() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackClientStreamingHandler< ::griddfs::WriteBlockRequest, ::griddfs::WriteBlockResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, ::griddfs::WriteBlockResponse* response) { return this->WriteBlock(context, response); }));
    }
    ~WithCallbackMethod_WriteBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBlock(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::griddfs::WriteBlockRequest>* /*reader*/, ::griddfs::WriteBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::griddfs::WriteBlockRequest>* WriteBlock(
      ::grpc::CallbackServerContext* /*context*/, ::griddfs::WriteBlockResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ReadBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ReadBlock() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::griddfs::ReadBlockRequest, ::griddfs::ReadBlockResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::griddfs::ReadBlockRequest* request) { return this->ReadBlock(context, request); }));
    }
    ~WithCallbackMethod_ReadBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadBlock(::grpc::ServerContext* /*context*/, const ::griddfs::ReadBlockRequest* /*request*/, ::grpc::ServerWriter< ::griddfs::ReadBlockResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::griddfs::ReadBlockResponse>* ReadBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::griddfs::ReadBlockRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteBlock() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::griddfs::DeleteBlockRequest, ::griddfs::DeleteBlockResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::griddfs::DeleteBlockRequest* request, ::griddfs::DeleteBlockResponse* response) { return this->DeleteBlock(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteBlock(
        ::grpc::MessageAllocator< ::griddfs::DeleteBlockRequest, ::griddfs::DeleteBlockResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::griddfs::DeleteBlockRequest, ::griddfs::DeleteBlockResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBlock(::grpc::ServerContext* /*context*/, const ::griddfs::DeleteBlockRequest* /*request*/, ::griddfs::DeleteBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::griddfs::DeleteBlockRequest* /*request*/, ::griddfs::DeleteBlockResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_WriteBlock<WithCallbackMethod_ReadBlock<WithCallbackMethod_DeleteBlock<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_WriteBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WriteBlock() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_WriteBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBlock(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::griddfs::WriteBlockRequest>* /*reader*/, ::griddfs::WriteBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReadBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReadBlock() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ReadBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadBlock(::grpc::ServerContext* /*context*/, const ::griddfs::ReadBlockRequest* /*request*/, ::grpc::ServerWriter< ::griddfs::ReadBlockResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteBlock() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DeleteBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBlock(::grpc::ServerContext* /*context*/, const ::griddfs::DeleteBlockRequest* /*request*/, ::griddfs::DeleteBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_WriteBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WriteBlock() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_WriteBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBlock(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::griddfs::WriteBlockRequest>* /*reader*/, ::griddfs::WriteBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteBlock(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(0, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReadBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReadBlock() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ReadBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadBlock(::grpc::ServerContext* /*context*/, const ::griddfs::ReadBlockRequest* /*request*/, ::grpc::ServerWriter< ::griddfs::ReadBlockResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadBlock(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(1, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteBlock() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DeleteBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBlock(::grpc::ServerContext* /*context*/, const ::griddfs::DeleteBlockRequest* /*request*/, ::griddfs::DeleteBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteBlock(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_WriteBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_WriteBlock() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackClientStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, ::grpc::ByteBuffer* response) { return this->WriteBlock(context, response); }));
    }
    ~WithRawCallbackMethod_WriteBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteBlock(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::griddfs::WriteBlockRequest>* /*reader*/, ::griddfs::WriteBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::grpc::ByteBuffer>* WriteBlock(
      ::grpc::CallbackServerContext* /*context*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ReadBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ReadBlock() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->ReadBlock(context, request); }));
    }
    ~WithRawCallbackMethod_ReadBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadBlock(::grpc::ServerContext* /*context*/, const ::griddfs::ReadBlockRequest* /*request*/, ::grpc::ServerWriter< ::griddfs::ReadBlockResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* ReadBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteBlock() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteBlock(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteBlock(::grpc::ServerContext* /*context*/, const ::griddfs::DeleteBlockRequest* /*request*/, ::griddfs::DeleteBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteBlock(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteBlock() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::griddfs::DeleteBlockRequest, ::griddfs::DeleteBlockResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::griddfs::DeleteBlockRequest, ::griddfs::DeleteBlockResponse>* streamer) {
                       return this->StreamedDeleteBlock(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteBlock(::grpc::ServerContext* /*context*/, const ::griddfs::DeleteBlockRequest* /*request*/, ::griddfs::DeleteBlockResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteBlock(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::griddfs::DeleteBlockRequest,::griddfs::DeleteBlockResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_DeleteBlock<Service > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_ReadBlock : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_ReadBlock() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::griddfs::ReadBlockRequest, ::griddfs::ReadBlockResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::griddfs::ReadBlockRequest, ::griddfs::ReadBlockResponse>* streamer) {
                       return this->StreamedReadBlock(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_ReadBlock() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReadBlock(::grpc::ServerContext* /*context*/, const ::griddfs::ReadBlockRequest* /*request*/, ::grpc::ServerWriter< ::griddfs::ReadBlockResponse>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedReadBlock(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::griddfs::ReadBlockRequest,::griddfs::ReadBlockResponse>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_ReadBlock<Service > SplitStreamedService;
  typedef WithSplitStreamingMethod_ReadBlock<WithStreamedUnaryMethod_DeleteBlock<Service > > StreamedService;
};

}  // namespace griddfs


#endif  // GRPC_griddfs_2eproto__INCLUDED
